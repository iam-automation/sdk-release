<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MobileAppTracker.html">

		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MobileAppTracker</TokenIdentifier>
			<Abstract type="html">MobileAppTracker provides the methods to send events and actions to the
HasOffers servers.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>


			<NodeRef refid="2"/>
		</Token>


		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MobileAppTracker/sharedManager</TokenIdentifier>
			<Abstract type="html">A singleton of the MobileAppTracker class</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>+ (MobileAppTracker *)sharedManager</Declaration>


			<Anchor>//api/name/sharedManager</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/startTrackerWithMATAdvertiserId:MATConversionKey:</TokenIdentifier>
			<Abstract type="html">Starts Mobile App Tracker with MAT Advertiser Id and MAT Conversion Key. Both values are required.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (BOOL)startTrackerWithMATAdvertiserId:(NSString *)aid MATConversionKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>aid</Name>
					<Abstract type="html">the MAT Advertiser Id provided in Mobile App Tracking.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">the MAT Conversion Key provided in Mobile App Tracking.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if error occurs, NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/startTrackerWithMATAdvertiserId:MATConversionKey:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setDelegate:</TokenIdentifier>
			<Abstract type="html">MobileAppTrackerDelegate : A Delegate used by MobileAppTracker to callback.
Set this to receive success and failure callbacks from the MAT SDK.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>@property (nonatomic, assign) id&lt;MobileAppTrackerDelegate&gt; delegate</Declaration>


			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/delegate</TokenIdentifier>
			<Abstract type="html">MobileAppTrackerDelegate : A Delegate used by MobileAppTracker to callback.
Set this to receive success and failure callbacks from the MAT SDK.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>@property (nonatomic, assign) id&lt;MobileAppTrackerDelegate&gt; delegate</Declaration>


			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MobileAppTracker/delegate</TokenIdentifier>
			<Abstract type="html">MobileAppTrackerDelegate : A Delegate used by MobileAppTracker to callback.
Set this to receive success and failure callbacks from the MAT SDK.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>@property (nonatomic, assign) id&lt;MobileAppTrackerDelegate&gt; delegate</Declaration>


			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setSdkDataParameters:</TokenIdentifier>
			<Abstract type="html">Provides a view of the parameters used by the sdk at any time.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>@property (nonatomic, readonly) NSDictionary *sdkDataParameters</Declaration>


			<Anchor>//api/name/sdkDataParameters</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/sdkDataParameters</TokenIdentifier>
			<Abstract type="html">Provides a view of the parameters used by the sdk at any time.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>@property (nonatomic, readonly) NSDictionary *sdkDataParameters</Declaration>


			<Anchor>//api/name/sdkDataParameters</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MobileAppTracker/sdkDataParameters</TokenIdentifier>
			<Abstract type="html">Provides a view of the parameters used by the sdk at any time.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>@property (nonatomic, readonly) NSDictionary *sdkDataParameters</Declaration>


			<Anchor>//api/name/sdkDataParameters</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setDebugMode:</TokenIdentifier>
			<Abstract type="html">Specifies that the server responses should include debug information.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setDebugMode:(BOOL)yesorno</Declaration>
			<Parameters>
				<Parameter>
					<Name>yesorno</Name>
					<Abstract type="html">defaults to NO.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setDebugMode:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setAppleAdvertisingIdentifier:</TokenIdentifier>
			<Abstract type="html">Set the Apple Advertising Identifier available in iOS 6.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setAppleAdvertisingIdentifier:(NSUUID *)appleAdvertisingIdentifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>appleAdvertisingIdentifier</Name>
					<Abstract type="html">- Apple Advertising Identifier</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setAppleAdvertisingIdentifier:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setAppleVendorIdentifier:</TokenIdentifier>
			<Abstract type="html">Set the Apple Vendor Identifier available in iOS 6.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setAppleVendorIdentifier:(NSUUID *)appleVendorIdentifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>appleVendorIdentifier</Name>
					<Abstract type="html">- Apple Vendor Identifier</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setAppleVendorIdentifier:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setCurrencyCode:</TokenIdentifier>
			<Abstract type="html">Sets the currency code.
Default: USD</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setCurrencyCode:(NSString *)currencyCode</Declaration>
			<Parameters>
				<Parameter>
					<Name>currencyCode</Name>
					<Abstract type="html">The string name for the currency code.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setCurrencyCode:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setJailbroken:</TokenIdentifier>
			<Abstract type="html">Sets the jailbroken device flag.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setJailbroken:(BOOL)yesorno</Declaration>
			<Parameters>
				<Parameter>
					<Name>yesorno</Name>
					<Abstract type="html">The jailbroken device flag.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setJailbroken:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setMATAdvertiserId:</TokenIdentifier>
			<Abstract type="html">Sets the MAT advertiser id.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setMATAdvertiserId:(NSString *)advertiserId</Declaration>
			<Parameters>
				<Parameter>
					<Name>advertiserId</Name>
					<Abstract type="html">The string id for the MAT advertiser id.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setMATAdvertiserId:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setMATConversionKey:</TokenIdentifier>
			<Abstract type="html">Sets the MAT conversion key.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setMATConversionKey:(NSString *)conversionKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>conversionKey</Name>
					<Abstract type="html">The string value for the MAT conversion key.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setMATConversionKey:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setPackageName:</TokenIdentifier>
			<Abstract type="html">Sets the package name (bundle_id).
Defaults to the Bundle Id of the app that is running the sdk.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setPackageName:(NSString *)packageName</Declaration>
			<Parameters>
				<Parameter>
					<Name>packageName</Name>
					<Abstract type="html">The string name for the package.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setPackageName:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setShouldAutoDetectJailbroken:</TokenIdentifier>
			<Abstract type="html">Specifies if the sdk should auto detect if the iOS device is jailbroken.
YES/NO</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setShouldAutoDetectJailbroken:(BOOL)yesorno</Declaration>
			<Parameters>
				<Parameter>
					<Name>yesorno</Name>
					<Abstract type="html">YES will detect if the device is jailbroken, defaults to YES.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setShouldAutoDetectJailbroken:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setShouldAutoGenerateAppleAdvertisingIdentifier:</TokenIdentifier>
			<Abstract type="html">Specifies if the sdk should pull the Apple Advertising Identifier from the device.
YES/NO</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setShouldAutoGenerateAppleAdvertisingIdentifier:(BOOL)yesorno</Declaration>
			<Parameters>
				<Parameter>
					<Name>yesorno</Name>
					<Abstract type="html">YES will set the Apple Advertising Identifier, defaults to NO.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setShouldAutoGenerateAppleAdvertisingIdentifier:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setShouldAutoGenerateAppleVendorIdentifier:</TokenIdentifier>
			<Abstract type="html">Specifies if the sdk should pull the Apple Vendor Identifier from the device.
YES/NO</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setShouldAutoGenerateAppleVendorIdentifier:(BOOL)yesorno</Declaration>
			<Parameters>
				<Parameter>
					<Name>yesorno</Name>
					<Abstract type="html">YES will set the Apple Vendor Identifier, defaults to NO.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setShouldAutoGenerateAppleVendorIdentifier:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setMACAddress:</TokenIdentifier>
			<Abstract type="html">Sets the MAC address.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setMACAddress:(NSString *)macAddress</Declaration>
			<Parameters>
				<Parameter>
					<Name>macAddress</Name>
					<Abstract type="html">mac address, defaults to nil.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setMACAddress:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setODIN1:</TokenIdentifier>
			<Abstract type="html">Sets the ODIN-1.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setODIN1:(NSString *)odin1</Declaration>
			<Parameters>
				<Parameter>
					<Name>odin1</Name>
					<Abstract type="html">ODIN-1, defaults to nil.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setODIN1:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setOpenUDID:</TokenIdentifier>
			<Abstract type="html">Sets the OpenUDID.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setOpenUDID:(NSString *)openUDID</Declaration>
			<Parameters>
				<Parameter>
					<Name>openUDID</Name>
					<Abstract type="html">OpenUDID, defaults to nil.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setOpenUDID:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setSiteId:</TokenIdentifier>
			<Abstract type="html">Sets the site id.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setSiteId:(NSString *)siteId</Declaration>
			<Parameters>
				<Parameter>
					<Name>siteId</Name>
					<Abstract type="html">The string id for the site id.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setSiteId:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setTrusteTPID:</TokenIdentifier>
			<Abstract type="html">Set the Trusted Preference Identifier (TPID).</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setTrusteTPID:(NSString *)trusteTPID</Declaration>
			<Parameters>
				<Parameter>
					<Name>trusteTPID</Name>
					<Abstract type="html">- Trusted Preference Identifier (TPID)</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setTrusteTPID:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setUserId:</TokenIdentifier>
			<Abstract type="html">Sets the user id.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setUserId:(NSString *)userId</Declaration>
			<Parameters>
				<Parameter>
					<Name>userId</Name>
					<Abstract type="html">The string name for the user id.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setUserId:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setUIID:</TokenIdentifier>
			<Abstract type="html">Sets the UIID. UIID is replacement of the deprecated UDID in iOS for Asia and Japan.
Ref: https://github.com/akisute/UIApplication-UIID</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setUIID:(NSString *)uiid</Declaration>
			<Parameters>
				<Parameter>
					<Name>uiid</Name>
					<Abstract type="html">UIID, defaults to nil.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setUIID:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setAge:</TokenIdentifier>
			<Abstract type="html">Sets the user&apos;s age.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setAge:(NSInteger)userAge</Declaration>
			<Parameters>
				<Parameter>
					<Name>userAge</Name>
					<Abstract type="html">user&apos;s age</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setAge:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setGender:</TokenIdentifier>
			<Abstract type="html">Sets the user&apos;s gender.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setGender:(MATGender)userGender</Declaration>
			<Parameters>
				<Parameter>
					<Name>userGender</Name>
					<Abstract type="html">user&apos;s gender, possible values MATGENDERMALE (0), MATGENDERFEMALE (1).</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setGender:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setLatitude:longitude:</TokenIdentifier>
			<Abstract type="html">Sets the user&apos;s location.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setLatitude:(double)latitude longitude:(double)longitude</Declaration>
			<Parameters>
				<Parameter>
					<Name>latitude</Name>
					<Abstract type="html">user&apos;s latitude</Abstract>
				</Parameter><Parameter>
					<Name>longitude</Name>
					<Abstract type="html">user&apos;s longitude</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setLatitude:longitude:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setLatitude:longitude:altitude:</TokenIdentifier>
			<Abstract type="html">Sets the user&apos;s location including altitude.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setLatitude:(double)latitude longitude:(double)longitude altitude:(double)altitude</Declaration>
			<Parameters>
				<Parameter>
					<Name>latitude</Name>
					<Abstract type="html">user&apos;s latitude</Abstract>
				</Parameter><Parameter>
					<Name>longitude</Name>
					<Abstract type="html">user&apos;s longitude</Abstract>
				</Parameter><Parameter>
					<Name>altitude</Name>
					<Abstract type="html">user&apos;s altitude</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setLatitude:longitude:altitude:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setAppAdTracking:</TokenIdentifier>
			<Abstract type="html">Set app-level ad-tracking.
YES/NO</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setAppAdTracking:(BOOL)enable</Declaration>
			<Parameters>
				<Parameter>
					<Name>enable</Name>
					<Abstract type="html">YES means opt-in, NO means opt-out.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setAppAdTracking:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackInstall</TokenIdentifier>
			<Abstract type="html">Record an Install or an Update by determining if a previous
version of this app is already installed on the user&apos;s device.
To be used if this is the first version of the app
or the previous version also included MAT sdk.
To be called when an app opens; typically in the didFinishLaunching event.
Works only once per app version, does not have any effect if called again in the same app version.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackInstall</Declaration>


			<Anchor>//api/name/trackInstall</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackInstallWithReferenceId:</TokenIdentifier>
			<Abstract type="html">Record an Install or an Update by determining if a previous
version of this app is already installed on the user&apos;s device.
To be used if this is the first version of the app
or the previous version also included MAT sdk.
To be called when an app opens; typically in the didFinishLaunching event.
Works only once per app version, does not have any effect if called again in the same app version.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackInstallWithReferenceId:(NSString *)refId</Declaration>
			<Parameters>
				<Parameter>
					<Name>refId</Name>
					<Abstract type="html">A reference id used to track an install and/or update, corresponds to advertiserrefid on the website.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackInstallWithReferenceId:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackUpdate</TokenIdentifier>
			<Abstract type="html">Instead of an Install, force an Update to be recorded.
To be used if MAT sdk was not integrated in the previous
version of this app. Only use this method if your app can distinguish
between an install and an update, else use trackInstall.
To be called when an app opens; typically in the didFinishLaunching event.
Works only once per app version, does not have any effect if called again in the same app version.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackUpdate</Declaration>


			<Anchor>//api/name/trackUpdate</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackUpdateWithReferenceId:</TokenIdentifier>
			<Abstract type="html">Instead of an Install, force an Update to be recorded.
To be used if MAT sdk was not integrated in the previous
version of this app. Only use this method if your app can distinguish
between an install and an update, else use trackInstallWithReferenceId.
To be called when an app opens; typically in the didFinishLaunching event.
Works only once per app version, does not have any effect if called again in the same app version.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackUpdateWithReferenceId:(NSString *)refId</Declaration>
			<Parameters>
				<Parameter>
					<Name>refId</Name>
					<Abstract type="html">A reference id used to track an update, corresponds to advertiserrefid on the website.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackUpdateWithReferenceId:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackActionForEventIdOrName:eventIsId:</TokenIdentifier>
			<Abstract type="html">Record a Track Action for an Event Id or Name.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackActionForEventIdOrName:(NSString *)eventIdOrName eventIsId:(BOOL)isId</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventIdOrName</Name>
					<Abstract type="html">The event name or event id.</Abstract>
				</Parameter><Parameter>
					<Name>isId</Name>
					<Abstract type="html">Yes if the event is an Id otherwise No if the event is a name only.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackActionForEventIdOrName:eventIsId:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackActionForEventIdOrName:eventIsId:referenceId:</TokenIdentifier>
			<Abstract type="html">Record a Track Action for an Event Id or Name and reference id.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackActionForEventIdOrName:(NSString *)eventIdOrName eventIsId:(BOOL)isId referenceId:(NSString *)refId</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventIdOrName</Name>
					<Abstract type="html">The event name or event id.</Abstract>
				</Parameter><Parameter>
					<Name>isId</Name>
					<Abstract type="html">Yes if the event is an Id otherwise No if the event is a name only.</Abstract>
				</Parameter><Parameter>
					<Name>refId</Name>
					<Abstract type="html">The referencId for an event, corresponds to advertiserrefid on the website.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackActionForEventIdOrName:eventIsId:referenceId:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackActionForEventIdOrName:eventIsId:revenueAmount:currencyCode:</TokenIdentifier>
			<Abstract type="html">Record a Track Action for an Event Id or Name, revenue and currency.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackActionForEventIdOrName:(NSString *)eventIdOrName eventIsId:(BOOL)isId revenueAmount:(float)revenueAmount currencyCode:(NSString *)currencyCode</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventIdOrName</Name>
					<Abstract type="html">The event name or event id.</Abstract>
				</Parameter><Parameter>
					<Name>isId</Name>
					<Abstract type="html">Yes if the event is an Id otherwise No if the event is a name only.</Abstract>
				</Parameter><Parameter>
					<Name>revenueAmount</Name>
					<Abstract type="html">The revenue amount for the event.</Abstract>
				</Parameter><Parameter>
					<Name>currencyCode</Name>
					<Abstract type="html">The currency code override for the event. Blank defaults to sdk setting.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackActionForEventIdOrName:eventIsId:revenueAmount:currencyCode:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackActionForEventIdOrName:eventIsId:referenceId:revenueAmount:currencyCode:</TokenIdentifier>
			<Abstract type="html">Record a Track Action for an Event Id or Name and reference id, revenue and currency.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackActionForEventIdOrName:(NSString *)eventIdOrName eventIsId:(BOOL)isId referenceId:(NSString *)refId revenueAmount:(float)revenueAmount currencyCode:(NSString *)currencyCode</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventIdOrName</Name>
					<Abstract type="html">The event name or event id.</Abstract>
				</Parameter><Parameter>
					<Name>isId</Name>
					<Abstract type="html">Yes if eventIdOrName is the event id for a pre-defined event on the MAT website, NO otherwise</Abstract>
				</Parameter><Parameter>
					<Name>refId</Name>
					<Abstract type="html">The referencId for an event, corresponds to advertiserrefid on the website.</Abstract>
				</Parameter><Parameter>
					<Name>revenueAmount</Name>
					<Abstract type="html">The revenue amount for the event.</Abstract>
				</Parameter><Parameter>
					<Name>currencyCode</Name>
					<Abstract type="html">The currency code override for the event. Blank defaults to sdk setting.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackActionForEventIdOrName:eventIsId:referenceId:revenueAmount:currencyCode:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackActionForEventIdOrName:eventIsId:eventItems:</TokenIdentifier>
			<Abstract type="html">Record a Track Action for an Event Id or Name and a list of event items.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackActionForEventIdOrName:(NSString *)eventIdOrName eventIsId:(BOOL)isId eventItems:(NSArray *)eventItems</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventIdOrName</Name>
					<Abstract type="html">The event name or event id.</Abstract>
				</Parameter><Parameter>
					<Name>isId</Name>
					<Abstract type="html">Yes if the event is an Id otherwise No if the event is a name only.</Abstract>
				</Parameter><Parameter>
					<Name>eventItems</Name>
					<Abstract type="html">An array of MATEventItem objects</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackActionForEventIdOrName:eventIsId:eventItems:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackActionForEventIdOrName:eventIsId:eventItems:referenceId:</TokenIdentifier>
			<Abstract type="html">Record a Track Action for an Event Name or Id.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackActionForEventIdOrName:(NSString *)eventIdOrName eventIsId:(BOOL)isId eventItems:(NSArray *)eventItems referenceId:(NSString *)refId</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventIdOrName</Name>
					<Abstract type="html">The event name or event id.</Abstract>
				</Parameter><Parameter>
					<Name>isId</Name>
					<Abstract type="html">Yes if the event is an Id otherwise No if the event is a name only.</Abstract>
				</Parameter><Parameter>
					<Name>eventItems</Name>
					<Abstract type="html">An array of MATEventItem objects</Abstract>
				</Parameter><Parameter>
					<Name>refId</Name>
					<Abstract type="html">The referencId for an event, corresponds to advertiserrefid on the website.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackActionForEventIdOrName:eventIsId:eventItems:referenceId:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackActionForEventIdOrName:eventIsId:eventItems:revenueAmount:currencyCode:</TokenIdentifier>
			<Abstract type="html">Record a Track Action for an Event Name or Id.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackActionForEventIdOrName:(NSString *)eventIdOrName eventIsId:(BOOL)isId eventItems:(NSArray *)eventItems revenueAmount:(float)revenueAmount currencyCode:(NSString *)currencyCode</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventIdOrName</Name>
					<Abstract type="html">The event name or event id.</Abstract>
				</Parameter><Parameter>
					<Name>isId</Name>
					<Abstract type="html">Yes if the event is an Id otherwise No if the event is a name only.</Abstract>
				</Parameter><Parameter>
					<Name>eventItems</Name>
					<Abstract type="html">An array of MATEventItem objects</Abstract>
				</Parameter><Parameter>
					<Name>revenueAmount</Name>
					<Abstract type="html">The revenue amount for the event.</Abstract>
				</Parameter><Parameter>
					<Name>currencyCode</Name>
					<Abstract type="html">The currency code override for the event. Blank defaults to sdk setting.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackActionForEventIdOrName:eventIsId:eventItems:revenueAmount:currencyCode:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackActionForEventIdOrName:eventIsId:eventItems:referenceId:revenueAmount:currencyCode:</TokenIdentifier>
			<Abstract type="html">Record a Track Action for an Event Name or Id.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackActionForEventIdOrName:(NSString *)eventIdOrName eventIsId:(BOOL)isId eventItems:(NSArray *)eventItems referenceId:(NSString *)refId revenueAmount:(float)revenueAmount currencyCode:(NSString *)currencyCode</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventIdOrName</Name>
					<Abstract type="html">The event name or event id.</Abstract>
				</Parameter><Parameter>
					<Name>isId</Name>
					<Abstract type="html">Yes if the event is an Id otherwise No if the event is a name only.</Abstract>
				</Parameter><Parameter>
					<Name>eventItems</Name>
					<Abstract type="html">An array of MATEventItem objects</Abstract>
				</Parameter><Parameter>
					<Name>refId</Name>
					<Abstract type="html">The referencId for an event, corresponds to advertiserrefid on the website.</Abstract>
				</Parameter><Parameter>
					<Name>revenueAmount</Name>
					<Abstract type="html">The revenue amount for the event.</Abstract>
				</Parameter><Parameter>
					<Name>currencyCode</Name>
					<Abstract type="html">The currency code override for the event. Blank defaults to sdk setting.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackActionForEventIdOrName:eventIsId:eventItems:referenceId:revenueAmount:currencyCode:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackActionForEventIdOrName:eventIsId:eventItems:referenceId:revenueAmount:currencyCode:transactionState:</TokenIdentifier>
			<Abstract type="html">Record a Track Action for an Event Name or Id.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackActionForEventIdOrName:(NSString *)eventIdOrName eventIsId:(BOOL)isId eventItems:(NSArray *)eventItems referenceId:(NSString *)refId revenueAmount:(float)revenueAmount currencyCode:(NSString *)currencyCode transactionState:(NSInteger)transactionState</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventIdOrName</Name>
					<Abstract type="html">The event name or event id.</Abstract>
				</Parameter><Parameter>
					<Name>isId</Name>
					<Abstract type="html">Yes if the event is an Id otherwise No if the event is a name only.</Abstract>
				</Parameter><Parameter>
					<Name>eventItems</Name>
					<Abstract type="html">An array of MATEventItem objects</Abstract>
				</Parameter><Parameter>
					<Name>refId</Name>
					<Abstract type="html">The referencId for an event, corresponds to advertiserrefid on the website.</Abstract>
				</Parameter><Parameter>
					<Name>revenueAmount</Name>
					<Abstract type="html">The revenue amount for the event.</Abstract>
				</Parameter><Parameter>
					<Name>currencyCode</Name>
					<Abstract type="html">The currency code override for the event. Blank defaults to sdk setting.</Abstract>
				</Parameter><Parameter>
					<Name>transactionState</Name>
					<Abstract type="html">The in-app purchase transaction SKPaymentTransactionState as received from the iTunes store.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackActionForEventIdOrName:eventIsId:eventItems:referenceId:revenueAmount:currencyCode:transactionState:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/trackActionForEventIdOrName:eventIsId:eventItems:referenceId:revenueAmount:currencyCode:transactionState:receipt:</TokenIdentifier>
			<Abstract type="html">Record a Track Action for an Event Name or Id.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)trackActionForEventIdOrName:(NSString *)eventIdOrName eventIsId:(BOOL)isId eventItems:(NSArray *)eventItems referenceId:(NSString *)refId revenueAmount:(float)revenueAmount currencyCode:(NSString *)currencyCode transactionState:(NSInteger)transactionState receipt:(NSData *)receipt</Declaration>
			<Parameters>
				<Parameter>
					<Name>eventIdOrName</Name>
					<Abstract type="html">The event name or event id.</Abstract>
				</Parameter><Parameter>
					<Name>isId</Name>
					<Abstract type="html">Yes if the event is an Id otherwise No if the event is a name only.</Abstract>
				</Parameter><Parameter>
					<Name>eventItems</Name>
					<Abstract type="html">An array of MATEventItem objects</Abstract>
				</Parameter><Parameter>
					<Name>refId</Name>
					<Abstract type="html">The referencId for an event, corresponds to advertiserrefid on the website.</Abstract>
				</Parameter><Parameter>
					<Name>revenueAmount</Name>
					<Abstract type="html">The revenue amount for the event.</Abstract>
				</Parameter><Parameter>
					<Name>currencyCode</Name>
					<Abstract type="html">The currency code override for the event. Blank defaults to sdk setting.</Abstract>
				</Parameter><Parameter>
					<Name>transactionState</Name>
					<Abstract type="html">The in-app purchase transaction SKPaymentTransactionState as received from the iTunes store.</Abstract>
				</Parameter><Parameter>
					<Name>receipt</Name>
					<Abstract type="html">The in-app purchase transaction receipt as received from the iTunes store.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/trackActionForEventIdOrName:eventIsId:eventItems:referenceId:revenueAmount:currencyCode:transactionState:receipt:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setUseCookieTracking:</TokenIdentifier>
			<Abstract type="html">Sets whether or not to user cookie based tracking.
Default: NO</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setUseCookieTracking:(BOOL)yesorno</Declaration>
			<Parameters>
				<Parameter>
					<Name>yesorno</Name>
					<Abstract type="html">YES/NO for cookie based tracking.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setUseCookieTracking:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setRedirectUrl:</TokenIdentifier>
			<Abstract type="html">Sets a url to be used with app-to-app tracking so that
the sdk can open the download (redirect) url. This is
used in conjunction with the setTracking:advertiserId:offerId:publisherId:redirect: method.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setRedirectUrl:(NSString *)redirectURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>redirect_url</Name>
					<Abstract type="html">The string name for the url.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setRedirectUrl:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/setTracking:advertiserId:offerId:publisherId:redirect:</TokenIdentifier>
			<Abstract type="html">Start a Tracking Session on the MAT server.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)setTracking:(NSString *)targetAppPackageName advertiserId:(NSString *)targetAppAdvertiserId offerId:(NSString *)targetAdvertiserOfferId publisherId:(NSString *)targetAdvertiserPublisherId redirect:(BOOL)shouldRedirect</Declaration>
			<Parameters>
				<Parameter>
					<Name>targetAppPackageName</Name>
					<Abstract type="html">The bundle identifier of the target app.</Abstract>
				</Parameter><Parameter>
					<Name>targetAppAdvertiserId</Name>
					<Abstract type="html">The MAT advertiser id of the target app.</Abstract>
				</Parameter><Parameter>
					<Name>shouldRedirect</Name>
					<Abstract type="html">Should redirect to the download url if the tracking session was successfully created. See setRedirectUrl:.</Abstract>
				</Parameter><Parameter>
					<Name>publisherId</Name>
					<Abstract type="html">The MAT publisher id of the target app.</Abstract>
				</Parameter><Parameter>
					<Name>offerId</Name>
					<Abstract type="html">The MAT offer id of the target app.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/setTracking:advertiserId:offerId:publisherId:redirect:</Anchor>
            <NodeRef refid="2"/>
		</Token>

		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MobileAppTracker/applicationDidOpenURL:sourceApplication:</TokenIdentifier>
			<Abstract type="html">Record the URL and Source when an application is opened via a URL scheme.
This typically occurs during OAUTH or when an app exits and is returned
to via a URL. The data will be sent to the HasOffers server so that a
Re-Engagement can be recorded.</Abstract>
			<DeclaredIn>MobileAppTracker.h</DeclaredIn>

			<Declaration>- (void)applicationDidOpenURL:(NSString *)urlString sourceApplication:(NSString *)sourceApplication</Declaration>
			<Parameters>
				<Parameter>
					<Name>urlString</Name>
					<Abstract type="html">the url string used to open your app.</Abstract>
				</Parameter><Parameter>
					<Name>sourceApplication</Name>
					<Abstract type="html">the source used to open your app. For example, mobile safari.</Abstract>
				</Parameter>
			</Parameters>

			<Anchor>//api/name/applicationDidOpenURL:sourceApplication:</Anchor>
            <NodeRef refid="2"/>
		</Token>


	</File>
</Tokens>